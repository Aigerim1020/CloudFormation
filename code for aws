# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
commands:
  create-stack:
    description: |
      Creates a stack as specified in the template. Wait until stack status is CREATE_COMPLETE.
    parameters:
      branch:
        default: master
        description: |
          Git branch of retrieving GitHub URL of CloudFormation template
          file. This option becomes effictive only when parameter
          'git-url' is specified.
        type: string
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the
          `aws cloudformation create-stack` command
        type: string
      git-url:
        default: ""
        description: |
          GitHub URL to retrieve CloudFormation template. If this
          parameter is not specified, checkout step is executed.
        type: string
      stack-name:
        description: |
          CloudFormation stack name
        type: string
      template-file-path:
        description: |
          CloudFormation template file path
        type: string
    steps:
    - run:
        command: |
          if [ <<parameters.git-url>> != "" ]; then
            mkdir ~/cfn-tmp
            git clone <<parameters.git-url>> -b <<parameters.branch>> ~/cfn-tmp
          fi
        name: Custom checkout
    - run:
        command: |
          if [ <<parameters.git-url>> != "" ]; then
            aws cloudformation create-stack \
            --stack-name <<parameters.stack-name>> \
            --template-body file:///home/circleci/cfn-tmp/<<parameters.template-file-path>> \
            <<parameters.extra-arguments>>
          else
            aws cloudformation create-stack \
            --stack-name <<parameters.stack-name>> \
            --template-body file://<<parameters.template-file-path>> \
            <<parameters.extra-arguments>>
          fi
        name: Create stack
    - run:
        command: |
          aws cloudformation wait stack-create-complete \
          --stack-name <<parameters.stack-name>>
        name: Wait until Stack is created
  delete-stack:
    description: |
      Delete existing stack
    parameters:
      stack-name:
        description: |
          CloudFormation stack name
        type: string
    steps:
    - run:
        command: |
          aws cloudformation delete-stack \
          --stack-name <<parameters.stack-name>>
        name: Delete stack
    - run:
        command: |
          aws cloudformation wait stack-delete-complete \
          --stack-name <<parameters.stack-name>>
        name: Wait until stack status is DELETE_COMPLETE
  deploy:
    description: |
      Deploys a stack as specified in the template, using a change set.
      Deploying a change set automatically waits for the stack to successfully
      reach UPDATE_COMPLETE.
    parameters:
      branch:
        default: master
        description: |
          Git branch of retrieving GitHub URL of CloudFormation template
          file. This option becomes effictive only when parameter
          'git-url' is specified.
        type: string
      capabilities:
        default: ""
        description: |
          Space separated list of capabilities required by the
          CloudFormation template, i.e. "CAPABILITY_IAM CAPABILITY_NAMED_IAM."
        type: string
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the
          `aws cloudformation create-stack` command
        type: string
      git-url:
        default: ""
        description: |
          GitHub URL to retrieve CloudFormation template. If this
          parameter is not specified, checkout step is executed.
        type: string
      parameter-overrides:
        default: ""
        description: |
          A list of parameter structures specifying input
          parameters to the stack. Parameters that are not specified
          will use the stack's existing value.

          Example: ParameterKey1=ParameterValue1 ParameterKey2=ParameterValue2
        type: string
      stack-name:
        description: |
          CloudFormation stack name
        type: string
      template-file-path:
        description: |
          CloudFormation template file path
        type: string
    steps:
    - run:
        command: |
          if [ <<parameters.git-url>> != "" ]; then
            mkdir ~/cfn-tmp
            git clone <<parameters.git-url>> -b <<parameters.branch>> ~/cfn-tmp
          fi
        name: Custom checkout
    - run:
        command: |
          if [ <<parameters.capabilities>> != "" ]; then
            capabilities="--capabilities <<parameters.capabilities>>"
          fi

          if [ <<parameters.parameter-overrides>> != "" ]; then
            parameter_overrides="--parameter-overrides <<parameters.parameter-overrides>>"
          fi

          if [ <<parameters.git-url>> != "" ]; then
            aws cloudformation deploy \
            --stack-name <<parameters.stack-name>> \
            --template-file /home/circleci/cfn-tmp/<<parameters.template-file-path>> \
            ${capabilities} \
            ${parameter_overrides} \
            <<parameters.extra-arguments>>
          else
            aws cloudformation deploy \
            --stack-name <<parameters.stack-name>> \
            --template-file <<parameters.template-file-path>> \
            ${capabilities} \
            ${parameter_overrides} \
            <<parameters.extra-arguments>>
          fi
        name: Deploy stack
  describe-stacks:
    description: |
      Returns the description for the specified stack; if no stack name
      was specified, then it returns the description for all the stacks
      created.
    parameters:
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the
          `aws cloudformation create-stack` command
        type: string
      stack-name:
        default: ""
        description: |
          CloudFormation stack name
        type: string
    steps:
    - run:
        command: |
          aws cloudformation describe-stacks \
          --stack-name <<parameters.stack-name>> \
          <<parameters.extra-arguments>>
        name: Describe stack
description: |
  "Control AWS CloudFormation stack.
    See details @GitHub https://github.com/circleci-orbs-tm/cloudformation"
executors:
  default:
    description: |
      The Debian-based Docker container to use when
      installing/configuring the AWS CLI
    docker:
    - image: circleci/python:<<parameters.python-version>>-<<parameters.debian-release>>
    parameters:
      debian-release:
        default: stretch
        type: string
      python-version:
        default: "2.7"
        type: string
jobs:
  create-stack:
    description: |
      Install and configure aws-cli and execute aws cloudformation commands
    executor:
      name: default
      python-version: 3.7.4
    parameters:
      aws-access-key-id:
        default: AWS_ACCESS_KEY_ID
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
      aws-region:
        default: AWS_DEFAULT_REGION
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
      aws-secret-access-key:
        default: AWS_SECRET_ACCESS_KEY
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
      branch:
        default: master
        description: |
          Git branch of retrieving GitHub URL of CloudFormation
           template file
        type: string
      configure-default-region:
        default: true
        description: |
          Some AWS actions don't require a region; set this to
          false if you do not want to store a default region
          in ~/.aws/config
        type: boolean
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the `aws
          cloudformation create-stack` command
        type: string
      git-url:
        default: ""
        description: |
          GitHub URL to retrieve CloudFormation template
        type: string
      profile-name:
        default: default
        description: Profile name to be configured.
        type: string
      stack-name:
        description: |
          CloudFormation stack name
        type: string
      template-file-path:
        description: |
          CloudFormation template file path
        type: string
    steps:
    - aws-cli/install
    - aws-cli/configure:
        aws-access-key-id: <<parameters.aws-access-key-id>>
        aws-region: <<parameters.aws-region>>
        aws-secret-access-key: <<parameters.aws-secret-access-key>>
        configure-default-region: <<parameters.configure-default-region>>
        profile-name: <<parameters.profile-name>>
    - checkout
    - create-stack:
        branch: <<parameters.branch>>
        extra-arguments: <<parameters.extra-arguments>>
        git-url: <<parameters.git-url>>
        stack-name: <<parameters.stack-name>>
        template-file-path: <<parameters.template-file-path>>
  delete-stack:
    description: |
      Install and configure aws-cli and execute aws cloudformation delete-stack command
    executor:
      name: default
      python-version: 3.7.4
    parameters:
      aws-access-key-id:
        default: AWS_ACCESS_KEY_ID
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
      aws-region:
        default: AWS_DEFAULT_REGION
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
      aws-secret-access-key:
        default: AWS_SECRET_ACCESS_KEY
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
      configure-default-region:
        default: true
        description: |
          Some AWS actions don't require a region; set this to
          false if you do not want to store a default region in
          ~/.aws/config
        type: boolean
      profile-name:
        default: default
        description: Profile name to be configured.
        type: string
      stack-name:
        description: |
          CloudFormation stack name
        type: string
    steps:
    - aws-cli/install
    - aws-cli/configure:
        aws-access-key-id: <<parameters.aws-access-key-id>>
        aws-region: <<parameters.aws-region>>
        aws-secret-access-key: <<parameters.aws-secret-access-key>>
        configure-default-region: <<parameters.configure-default-region>>
        profile-name: <<parameters.profile-name>>
    - delete-stack:
        stack-name: <<parameters.stack-name>>
  deploy:
    description: |
      Install and configure aws-cli and execute aws cloudformation deploy command
    executor:
      name: default
      python-version: 3.7.4
    parameters:
      aws-access-key-id:
        default: AWS_ACCESS_KEY_ID
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
      aws-region:
        default: AWS_DEFAULT_REGION
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
      aws-secret-access-key:
        default: AWS_SECRET_ACCESS_KEY
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
      branch:
        default: master
        description: |
          Git branch of retrieving GitHub URL of CloudFormation
           template file
        type: string
      capabilities:
        default: ""
        description: |
          Space separated list of capabilities required by the CloudFormation template.
          i.e. "CAPABILITY_AUTO_EXPAND CAPABILITY_IAM CAPABILITY_NAMED_IAM."
        type: string
      configure-default-region:
        default: true
        description: |
          Some AWS actions don't require a region; set this to
          false if you do not want to store a default region
          in ~/.aws/config
        type: boolean
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the `aws
          cloudformation deploy` command
        type: string
      git-url:
        default: ""
        description: |
          GitHub URL to retrieve CloudFormation template
        type: string
      parameter-overrides:
        default: ""
        description: |
          A list of parameter structures specifying input
          parameters to the stack. Parameters that are not specified
          will use the stack's existing value.

          Example: ParameterKey1=ParameterValue1 ParameterKey2=ParameterValue2
        type: string
      profile-name:
        default: default
        description: Profile name to be configured.
        type: string
      stack-name:
        description: |
          CloudFormation stack name
        type: string
      template-file-path:
        description: |
          CloudFormation template file path
        type: string
    steps:
    - aws-cli/install
    - aws-cli/configure:
        aws-access-key-id: <<parameters.aws-access-key-id>>
        aws-region: <<parameters.aws-region>>
        aws-secret-access-key: <<parameters.aws-secret-access-key>>
        configure-default-region: <<parameters.configure-default-region>>
        profile-name: <<parameters.profile-name>>
    - checkout
    - deploy:
        branch: <<parameters.branch>>
        capabilities: <<parameters.capabilities>>
        extra-arguments: <<parameters.extra-arguments>>
        git-url: <<parameters.git-url>>
        parameter-overrides: <<parameters.parameter-overrides>>
        stack-name: <<parameters.stack-name>>
        template-file-path: <<parameters.template-file-path>>
  describe-stacks:
    description: |
      Install and configure aws-cli and execute `aws cloudformation
      describe-stacks` command
    executor:
      name: default
      python-version: 3.7.4
    parameters:
      aws-access-key-id:
        default: AWS_ACCESS_KEY_ID
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
      aws-region:
        default: AWS_DEFAULT_REGION
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
      aws-secret-access-key:
        default: AWS_SECRET_ACCESS_KEY
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
      configure-default-region:
        default: true
        description: |
          Some AWS actions don't require a region; set this to
          false if you do not want to store a default region
          in ~/.aws/config
        type: boolean
      extra-arguments:
        default: ""
        description: |
          Optional additional arguments to pass to the `aws
          cloudformation describe-stacks` command
        type: string
      profile-name:
        default: default
        description: Profile name to be configured.
        type: string
      stack-name:
        default: ""
        description: |
          CloudFormation stack name
        type: string
    steps:
    - aws-cli/install
    - aws-cli/configure:
        aws-access-key-id: <<parameters.aws-access-key-id>>
        aws-region: <<parameters.aws-region>>
        aws-secret-access-key: <<parameters.aws-secret-access-key>>
        configure-default-region: <<parameters.configure-default-region>>
        profile-name: <<parameters.profile-name>>
    - describe-stacks:
        extra-arguments: <<parameters.extra-arguments>>
        stack-name: <<parameters.stack-name>>
orbs:
  aws-cli: circleci/aws-cli@0.1.14
version: 2.1

